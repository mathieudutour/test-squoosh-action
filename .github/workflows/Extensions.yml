name: Extensions

on:
  workflow_dispatch:
    inputs:
      paths:
        description: 'Extensions to update (comma-separated relative paths for extensions) or ("extensions/**"" to execute on all possible subdirectories)'
        required: true
  pull_request:
    paths:
      - "extensions/**"
    branches: [main, master]

jobs:
  extensions_squoosh:
    if: github.repository == 'mathieudutour/test-squoosh-action'
    name: "Squoosh images"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: raycast/github-actions/git-checkout@v1.13.0
      - name: Get changed extensions
        id: get_changed_extensions
        uses: raycast/github-actions/get-changed-extensions@v1.13.0
        with:
          custom_paths: ${{ inputs.paths }}
          github_event_name: ${{ github.event_name }}
      - uses: actions/github-script@v6
        if: ${{ steps.get_changed_extensions.outputs.only_deleted == 'false' }}
        id: images
        env:
          CHANGED_EXTENSIONS: ${{ steps.get_changed_extensions.outputs.paths }}
        with:
          result-encoding: string
          script: |
            const fs = require('fs')
            const { CHANGED_EXTENSIONS } = process.env

            const images = []

            console.log({CHANGED_EXTENSIONS})

            const getImagesRecursively = (directory) => {
              const filesInDirectory = fs.readdirSync(directory);
              for (const file of filesInDirectory) {
                const absolute = path.join(directory, file);
                if (fs.statSync(absolute).isDirectory()) {
                  getFilesRecursively(absolute);
                } else {
                  const extension = path.extname(absolute)
                  if (['.png', '.jpeg', '.jpg', '.webp'].indexOf(extension.toLowerCase()) !== -1) {
                    files.push(absolute);
                  }
                }
              }
            };

            CHANGED_EXTENSIONS.split('\n').forEach(ext => {
              getImagesRecursively(ext)
            })

            console.log({images})

            return images.join(',')
      - uses: mathieudutour/image-actions@main
        if: ${{ steps.get_changed_extensions.outputs.only_deleted == 'false' }}
        with:
          images: ${{steps.images.outputs.result}}
